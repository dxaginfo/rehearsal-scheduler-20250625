version: '3.8'

services:
  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:4000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - rehearsal-scheduler-network

  # Backend Express API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rehearsal_scheduler
      - JWT_SECRET=your_jwt_secret_key_change_in_production
      - JWT_EXPIRES_IN=7d
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - rehearsal-scheduler-network

  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: rehearsal-scheduler-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rehearsal_scheduler
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rehearsal-scheduler-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: rehearsal-scheduler-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - rehearsal-scheduler-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  rehearsal-scheduler-network:
    driver: bridge